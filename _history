{"entries":[{"timestamp":1735376469330,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"k_Bit_Led\"><field name=\"col\">COLOR.white</field><next><block type=\"k_Bit_LED_brightness\"><value name=\"br\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Br\" precision=\"0\"></mutation><field name=\"SLIDER\">255</field></shadow></value></block></next></block></statement></block><block type=\"device_forever\" x=\"453\" y=\"-10\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":440}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"Vershinin PR"],[1,"task"],[0,"2\",\n"]],"start1":11,"start2":11,"length1":20,"length2":12},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":334,"start2":334,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// здесь помещаются тесты; они не будут скомпилированы, пока пакет используется в качестве расширения.\n"}]}],"snapshots":[{"timestamp":1735376468412,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"k_Bit_Led\"><field name=\"col\">COLOR.white</field><next><block type=\"k_Bit_LED_brightness\"><value name=\"br\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"255\" label=\"Br\" precision=\"0\"></mutation><field name=\"SLIDER\">255</field></shadow></value></block></next></block></statement></block><block type=\"device_forever\" x=\"453\" y=\"-10\"></block></xml>","main.ts":"","README.md":"","main.py":"light_lvl=0\nFlashingYellowOn=False\nCarInMotion=False\nk_Bit.led(COLOR.WHITE)\nbasic.clear_screen()\npins.analog_set_pitch_pin(AnalogPin.P0)\nmusic.start_melody(music.built_in_melody(Melodies.POWER_UP), MelodyOptions.ONCE)\nstrip = neopixel.create(DigitalPin.P5, 18, NeoPixelMode.RGB)\nstrip.set_brightness(127)\n\ndef moveForward():\n    global light_lvl\n    global CarInMotion\n    speed=int(light_lvl*100/255)\n    k_Bit.run(DIR.RUN_FORWARD, speed)\n    CarInMotion=True\n    basic.show_arrow(ArrowNames.NORTH)\n    strip.set_pixel_color(1, neopixel.colors(NeoPixelColors.RED))\n    strip.show()\n    while(CarInMotion):\n        strip.rotate(-1)\n        strip.show()\n        basic.pause(100)\n \ndef moveBack():\n    global light_lvl\n    global CarInMotion\n    speed=int(light_lvl*100/255)\n    k_Bit.run(DIR.RUN_BACK, speed)\n    CarInMotion=True\n    basic.show_arrow(ArrowNames.SOUTH)\n    strip.set_pixel_color(1, neopixel.colors(NeoPixelColors.RED))\n    strip.show()\n    while(CarInMotion):\n        strip.rotate(1)\n        strip.show()\n        basic.pause(100)\n\ndef turnLeft():\n    global light_lvl\n    global FlashingYellowOn\n    course=input.compass_heading()\n    speed=int(light_lvl*100/255)\n    k_Bit.run(DIR.TURN_LEFT, speed)\n    basic.show_arrow(ArrowNames.WEST)\n    FlashingYellowOn=True\n    while((input.compass_heading()-course)%360<90):\n        pause(20)\n    k_Bit.car_stop()\n    basic.clear_screen()\n    FlashingYellowOn=False\n\ndef turnRight():\n    global light_lvl\n    global FlashingYellowOn\n    course=input.compass_heading()\n    speed=int(light_lvl*100/255)\n    k_Bit.run(DIR.TURN_RIGHT, speed)\n    basic.show_arrow(ArrowNames.EAST)\n    FlashingYellowOn=True\n    while((course-input.compass_heading())%360<90):\n        pause(20)\n    k_Bit.car_stop()\n    basic.clear_screen()\n    FlashingYellowOn=False\n\ndef ReverseLeft():\n    global light_lvl\n    global FlashingYellowOn\n    course=input.compass_heading()\n    speed=int(light_lvl*100/255)\n    k_Bit.run(DIR.TURN_LEFT, speed)\n    basic.show_arrow(ArrowNames.SOUTH_WEST)\n    FlashingYellowOn=True\n    while((input.compass_heading()-course)%360<180):\n        pause(20)\n    k_Bit.car_stop()\n    basic.clear_screen()\n    FlashingYellowOn=False\n\ndef ReverseRight():\n    global FlashingYellowOn\n    global light_lvl\n    course=input.compass_heading()\n    speed=int(light_lvl*100/255)\n    k_Bit.run(DIR.TURN_RIGHT, speed)\n    basic.show_arrow(ArrowNames.SOUTH_EAST)\n    FlashingYellowOn=True\n    while(((course-input.compass_heading())%360)<180):\n        pause(20)\n    k_Bit.car_stop()\n    basic.clear_screen()\n    FlashingYellowOn=False\n        \ndef GetLightLevel():\n    light_lvl=input.light_level()\n    k_Bit.LED_brightness(255-light_lvl)  \nbasic.forever(GetLightLevel)\n\ndef on_forever2():\n    input.on_button_pressed(Button.A, ReverseLeft)\nbasic.forever(on_forever2)\n\ndef flashing_yellow():\n    if(FlashingYellowOn==True):\n        strip.show_color(neopixel.colors(NeoPixelColors.ORANGE))\n        basic.pause(500)\n        strip.clear()\n        strip.show()\n        basic.pause(500)\nbasic.forever(flashing_yellow)\n\n                ","pxt.json":"{\n    \"name\": \"task2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-k-bit\": \"github:mworkfun/pxt-k-bit#37a70a95e343e72aeeb5cb91bfa0db567fa5bdec\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v7.0.51\",\n        \"tag\": \"v7.0.51\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/c3819f016bd720d0eb86efea9a84dcd4fc7b2e1f\",\n        \"target\": \"7.0.51\",\n        \"pxt\": \"11.1.5\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1735376511302}